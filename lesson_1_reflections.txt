Q: How did viewing a diff between two versions of a file help you see bug that was introduced?

A: If there is no bug in the previous version, then the bug can only be in where we changed the code. Viewing the difference will help us find them.

Q: How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

A: It allows us to compare historical versions to find changes that can potentially lead to the bug.

Q: What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

A: The biggest pro is that every commit is intended, thus more meaningful. However, the con is that we sometimes would forget to commit. So manual commit can be potentially prone to human error.

Q: Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

A: Commit is most meaningful when made in logical unit. When working on a project, sometimes we might need to edit several files together to achieve one functionality. In such situation, saving the edition of these files all at once would be logically more meaningful.

Q: How can you use the commands git log and git diff to view the history of files?

A: Git log will help us locate where we made the changes that are relevant to the bugs. Git diff can then use the commit ID shown in the git log to view detail changes made in the commit.

Q: How might using version control make you more confident to make changes that could break something?

A: I can get back to what works even if I break some things!

Q: Now that you have your workspace set up, what do you want to try using Git for?

A: For my upcoming CS class project and my own fun!
